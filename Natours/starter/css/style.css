/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*, *::after, *::before {
    margin: 0;
    padding: 0;
    /* what this does is to change the box model so that the headings and borders are no longer added to the total width and height of the specified box */
    /* box-sizing property by default is not inherited */
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;

    /* padding: 30px; */
    padding: 3rem;

    box-sizing: border-box;
}


.header {
    /* What this does is the height should be 95% of the viewport-height */
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
    position: absolute;
    /* top: 40px;
    left: 40px;*/

    top: 4rem;
    left: 4rem;
}

.logo {
    /* height: 35px; */
    height: 3.5rem;
}

/* we use this css styling to center the positioning of our div */
.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);

    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* This removes the shaky portion of animation when we use moveInLeft and moveInRight */
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    /* font-size: 60px; */
    font-size: 6rem;
    font-weight: 400;
    /* letter-spacing: 35px; */
    letter-spacing: 3.5rem;

    animation: moveInLeft 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.heading-primary--sub {
    display: block;
    /* font-size: 20px; */
    font-size: 2rem;
    font-weight: 700;
    /* letter-spacing: 17.4px; */
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}


.btn:link, .btn:visited {
    text-decoration: none;
    text-transform: uppercase;
    /* padding: 15px 40px; */
    padding: 1.5rem 4rem;
    display: inline-block;

    border-radius: 10rem;

    /* Transition should be in initial state before animation happens on :hover or any pseudo classes */
    transition: all .2s;

    font-size: 1.6rem;

    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}
/* Active triggers when button is pressed by user */
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn--white {
    background-color: #fff;
    color: #777;
}

/* we need the ::after pseudo class to replicate cool effects */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;

    /* We to put this the after pseudo css style to go behind. For absolute positioning, there has to be a reference point where the element should sit. So the parent element where this pseudo-element sits should have a `relative` positioning. */
    position: absolute;
    top: 0;
    left: 0;
    /* This puts it behind the button */
    z-index: -1;

    transition: all 0.4s;
}
.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
}




